#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <11 10>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <19 20>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 21>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 2>;
        };

        semi_colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <31 32>;
        };

        single_q {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <32 33>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        password_input: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_1) &kp LS(NUMBER_2) &kp LS(NUMBER_3) &kp LS(W) &kp LS(A) &kp LS(Q) &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp W &kp A &kp Q &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_Mac {
            bindings = <
&kp Q             &kp W         &kp E             &kp R  &kp T                                     &kp Y          &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S         &kp D             &kp F  &kp G      &kp C_MUTE      &kp EQUAL      &kp H          &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V  &kp B      &mo 6           &kp BACKSLASH  &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 2  &kp SPACE  &kp TAB         &kp BACKSPACE  &kp RIGHT_GUI                             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        default_Win {
            bindings = <
&kp Q             &kp W         &kp E             &kp R  &kp T                                     &kp Y              &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S         &kp D             &kp F  &kp G      &kp C_MUTE      &kp EQUAL      &kp H              &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V  &kp B      &mo 6           &kp BACKSLASH  &kp N              &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &mo 2  &kp SPACE  &kp TAB         &kp BACKSPACE  &kp RIGHT_CONTROL                             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Allow_Num_Mac {
            bindings = <
&kp ESCAPE          &kp LG(UP_ARROW)    &kp UP_ARROW    &kp LG(DOWN_ARROW)   &trans                                               &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp LG(Q)
&kp LA(LEFT_ARROW)  &kp LEFT            &kp DOWN_ARROW  &kp RIGHT            &kp LA(RIGHT_ARROW)  &password_input      &kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH     &kp LS(LG(NUMBER_4))
&kp LEFT_SHIFT      &kp LG(LEFT_ARROW)  &trans          &kp LG(RIGHT_ARROW)  &trans               &kp LA(TAB)          &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &none
&trans              &trans              &trans          &trans               &trans               &trans               &trans     &kp N0                                                  &to 0
            >;
        };

        Allow_Num_Win {
            bindings = <
&kp ESCAPE          &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN  &trans                                               &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp LA(F4)
&kp LC(LEFT_ARROW)  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp LC(RIGHT_ARROW)  &password_input      &kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH     &kp LS(LG(S))
&trans              &kp HOME     &trans          &kp END        &trans               &kp LA(TAB)          &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &none
&trans              &trans       &trans          &trans         &trans               &trans               &trans     &kp N0                                                  &to 0
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans     &trans                      &trans  &mkp MB4              &trans    &mkp MB5               &trans
&trans  &trans  &trans  &mkp LCLK  &trans  &trans      &trans  &trans  &mkp MB1              &mkp MB3  &mkp MB2               &trans
&trans  &trans  &trans  &trans     &trans  &trans      &trans  &trans  &kp LG(LEFT_BRACKET)  &trans    &kp LG(RIGHT_BRACKET)  &trans
&trans  &trans  &trans  &trans     &trans  &trans      &trans  &trans                                                         &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Symbol {
            bindings = <
&none           &none         &none              &none            &none                                    &none  &kp GRAVE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &none      &bt BT_CLR      &none  &kp AT_SIGN  &kp SEMICOLON     &kp SQT            &none
&kp LEFT_SHIFT  &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none         &none      &bt BT_CLR_ALL  &none  &kp F2       &kp F5            &kp F7             &none
&none           &none         &none              &none            &none         &none      &none           &none                                                    &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };
};
